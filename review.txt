复习：
1. 线程概念 多任务变成方式
    *进程分之
    *领用多核资源（CPU内核）
    *资源消耗少
    *使用进程资源

2.线程属性     daemon
3.自定义线程类
4.同步互斥 ：解决了资源相互争夺的问题
    Event
    Lock
    死锁

5.GIL问题
    结果：Python执行效率低
    结论：Python线程只适合高延迟多阻塞的IO操作

6.进程线程的区别
=========================================================================================
FTP  文件服务器
1.准备好文件库（目录）
2.功能分析



3.技术点
    什么网络模型？
        TCP 网络传输
    什么并发模型？
        多线程并发 Thread
4.功能结构
    分为几个功能模块？
        * 并发模型
        * 查看文件列表
        * 下载文件
        * 上传文件
        * 退出

    使用什么封装？
        类封装客户端功能

    协议：L
         D filename
         U
         Q
5.功能的具体逻辑
    * 并发模型
    * 查看文件列表
        客户端： 发起请求,等待回应,列表接收
        服务端： 接收请求,做出回应,方式列表
    * 下载文件
        客户端： 发起请求,等待回应,接收文件
        服务端： 接收请求,判断文件是否存在,发送文件
    * 上传文件
    * 退出




























